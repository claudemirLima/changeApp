services:
  # PostgreSQL Database (Único container com múltiplas instâncias)
  postgres-dev:
    image: postgres:15-alpine
    container_name: changeapp-postgres-dev
    environment:
      POSTGRES_DB: changeapp_dev
      POSTGRES_USER: changeapp
      POSTGRES_PASSWORD: changeapp123
    ports:
      - "5433:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init-databases.sql:/docker-entrypoint-initdb.d/01-init-databases.sql:ro
    networks:
      - changeapp-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U changeapp -d changeapp_dev && pg_isready -U changeapp -d changeapp_product_dev && pg_isready -U changeapp -d changeapp_transactions_dev"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB Database para TransactionApi (Desenvolvimento)
  mongodb-dev:
    image: mongo:7.0
    container_name: changeapp-mongodb-dev
    environment:
      MONGO_INITDB_ROOT_USERNAME: changeapp
      MONGO_INITDB_ROOT_PASSWORD: changeapp123
      MONGO_INITDB_DATABASE: changeapp_transactions_dev
    ports:
      - "27018:27017"
    volumes:
      - mongodb_dev_data:/data/db
      - ./transactionApi/src/main/resources/db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - changeapp-dev-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: changeapp-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - changeapp-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ExchangeApi (Desenvolvimento)
#  exchange-api-dev:
#    build:
#      context: ./exchangeApi
#      dockerfile: Dockerfile.dev
#    container_name: changeapp-exchange-api-dev
#    ports:
#      - "8081:8081"
#    environment:
#      SPRING_PROFILES_ACTIVE: dev
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-dev:5432/changeapp_dev
#      SPRING_DATASOURCE_USERNAME: changeapp
#      SPRING_DATASOURCE_PASSWORD: changeapp123
#      SPRING_REDIS_HOST: redis
#      SPRING_REDIS_PORT: 6379
#      JAVA_OPTS: "-Xmx512m -Xms256m -Dspring.profiles.active=dev"
#    volumes:
#      - ./exchangeApi:/app
#      - /app/target
#    depends_on:
#      postgres-dev:
#        condition: service_healthy
#      redis:
#        condition: service_healthy
#    networks:
#      - changeapp-dev-network
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 60s

  # TransactionApi (Desenvolvimento)
#  transaction-api-dev:
#    build:
#      context: ./transactionApi
#      dockerfile: Dockerfile.dev
#    container_name: changeapp-transaction-api-dev
#    ports:
#      - "8082:8082"
#    environment:
#      SPRING_PROFILES_ACTIVE: dev
#      SPRING_DATA_MONGODB_HOST: mongodb-dev
#      SPRING_DATA_MONGODB_PORT: 27017
#      SPRING_DATA_MONGODB_DATABASE: changeapp_transactions_dev
#      SPRING_DATA_MONGODB_USERNAME: changeapp
#      SPRING_DATA_MONGODB_PASSWORD: changeapp123
#      SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE: admin
#      SPRING_REDIS_HOST: redis
#      SPRING_REDIS_PORT: 6379
#      JAVA_OPTS: "-Xmx512m -Xms256m -Dspring.profiles.active=dev"
#    volumes:
#      - ./transactionApi:/app
#      - /app/target
#    depends_on:
#      mongodb-dev:
#        condition: service_healthy
#      redis:
#        condition: service_healthy
#    networks:
#      - changeapp-dev-network
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 60s

  # ManagerProductApi (Desenvolvimento)
  manager-product-api-dev:
    build:
      context: ./managerProductApi
      dockerfile: Dockerfile.dev
    container_name: changeapp-manager-product-api-dev
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-dev:5432/changeapp_product_dev
      SPRING_DATASOURCE_USERNAME: changeapp
      SPRING_DATASOURCE_PASSWORD: changeapp123
      JAVA_OPTS: "-Xmx512m -Xms256m -Dspring.profiles.active=dev"
    volumes:
      - ./managerProductApi:/app
      - /app/target
    depends_on:
      postgres-dev:
        condition: service_healthy
    networks:
      - changeapp-dev-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_dev_data:
    driver: local
  mongodb_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  changeapp-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16 