#!/bin/bash

# Script para gerenciar o MongoDB
# Uso: ./scripts/mongodb-manager.sh [dev|test|hm|prd] [connect|backup|restore|logs]

ENVIRONMENT=${1:-dev}
ACTION=${2:-connect}

echo "üóÑÔ∏è Gerenciando MongoDB..."
echo "üìã Ambiente: $ENVIRONMENT"
echo "üéØ A√ß√£o: $ACTION"

# Configura√ß√µes por ambiente
case $ENVIRONMENT in
    "dev")
        CONTAINER_NAME="changeapp-mongodb-dev"
        PORT="27018"
        DATABASE="changeapp_transactions_dev"
        ;;
    "test")
        CONTAINER_NAME="changeapp-mongodb-test"
        PORT="27019"
        DATABASE="changeapp_transactions_test"
        ;;
    "hm")
        CONTAINER_NAME="changeapp-mongodb-hm"
        PORT="27020"
        DATABASE="changeapp_transactions_hm"
        ;;
    "prd")
        CONTAINER_NAME="changeapp-mongodb"
        PORT="27017"
        DATABASE="changeapp_transactions"
        ;;
    *)
        echo "‚ùå Ambiente inv√°lido. Use: dev, test, hm ou prd"
        exit 1
        ;;
esac

# Verificar se o container est√° rodando
if ! docker ps | grep -q $CONTAINER_NAME; then
    echo "‚ùå Container $CONTAINER_NAME n√£o est√° rodando"
    echo "üí° Execute: docker-compose -f docker-compose.dev.yml up -d"
    exit 1
fi

case $ACTION in
    "connect")
        echo "üîå Conectando ao MongoDB..."
        echo "üìä Container: $CONTAINER_NAME"
        echo "üåê Porta: $PORT"
        echo "üóÉÔ∏è Database: $DATABASE"
        echo ""
        echo "üîß Comandos √∫teis:"
        echo "  - show dbs                    # Listar databases"
        echo "  - use $DATABASE              # Usar database"
        echo "  - show collections           # Listar collections"
        echo "  - db.transactions.find()     # Listar transa√ß√µes"
        echo "  - db.transactions.count()    # Contar transa√ß√µes"
        echo "  - exit                       # Sair"
        echo ""
        docker exec -it $CONTAINER_NAME mongosh -u changeapp -p changeapp123 --authenticationDatabase admin
        ;;
    "backup")
        echo "üíæ Fazendo backup do MongoDB..."
        BACKUP_DIR="./backups/mongodb"
        mkdir -p $BACKUP_DIR
        
        BACKUP_FILE="$BACKUP_DIR/${DATABASE}_$(date +%Y%m%d_%H%M%S).gz"
        docker exec $CONTAINER_NAME mongodump --db $DATABASE --archive --gzip > $BACKUP_FILE
        
        echo "‚úÖ Backup criado: $BACKUP_FILE"
        ;;
    "restore")
        echo "üì• Restaurando backup do MongoDB..."
        BACKUP_DIR="./backups/mongodb"
        
        if [ -z "$3" ]; then
            echo "‚ùå Especifique o arquivo de backup"
            echo "üí° Uso: $0 $ENVIRONMENT restore <arquivo_backup>"
            exit 1
        fi
        
        BACKUP_FILE="$BACKUP_DIR/$3"
        if [ ! -f "$BACKUP_FILE" ]; then
            echo "‚ùå Arquivo de backup n√£o encontrado: $BACKUP_FILE"
            exit 1
        fi
        
        docker exec -i $CONTAINER_NAME mongorestore --db $DATABASE --archive --gzip < $BACKUP_FILE
        echo "‚úÖ Backup restaurado com sucesso"
        ;;
    "logs")
        echo "üìã Exibindo logs do MongoDB..."
        docker logs $CONTAINER_NAME
        ;;
    "stats")
        echo "üìä Estat√≠sticas do MongoDB..."
        docker exec $CONTAINER_NAME mongosh -u changeapp -p changeapp123 --authenticationDatabase admin --eval "
            use $DATABASE;
            print('=== ESTAT√çSTICAS DO MONGODB ===');
            print('Database: ' + db.getName());
            print('Collections: ' + db.getCollectionNames().join(', '));
            print('Total de transa√ß√µes: ' + db.transactions.count());
            print('Transa√ß√µes por status:');
            db.transactions.aggregate([
                { \$group: { _id: '\$status', count: { \$sum: 1 } } },
                { \$sort: { count: -1 } }
            ]).forEach(function(doc) {
                print('  ' + doc._id + ': ' + doc.count);
            });
            print('Transa√ß√µes por tipo:');
            db.transactions.aggregate([
                { \$group: { _id: '\$type', count: { \$sum: 1 } } },
                { \$sort: { count: -1 } }
            ]).forEach(function(doc) {
                print('  ' + doc._id + ': ' + doc.count);
            });
        "
        ;;
    *)
        echo "‚ùå A√ß√£o inv√°lida. Use: connect, backup, restore, logs ou stats"
        exit 1
        ;;
esac

echo "‚úÖ Opera√ß√£o conclu√≠da!" 